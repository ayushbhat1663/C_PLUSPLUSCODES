    class solution {
int findSwapValues(int a[], int n, int b[], int m) {
        //sort the arrays a[] and b[]
    sort(a,a+n);
    sort(b,b+m);
    //calculate the sum of arrays 
    int sum_a=0,sum_b=0;
    for(int i=0;i<n;i++){
        sum_a+=a[i];
    }
    for(int i=0;i<m;i++){
        sum_b+=b[i];
    }
    // check if the difference of sums is divisible by 2
    if((sum_a-sum_b)%2!=0){
        return -1;
    }
    //calculate the required difference after swapping
    int diff=(sum_a-sum_b)/2;
    int i=0,j=0;
    //iterate through both arrays to find the pair that can be swapped
    while(i<n&&j<m){
        int curr_diff=a[i]-b[j];
        if(curr_diff==diff){
            return 1;
            //if the pair is found return 1
        }
        else if(curr_diff<diff){
            i++;
        } else{
            j++;
        }
    }
    return -1;
    //if no such pair is found return -1
    }
}; 
